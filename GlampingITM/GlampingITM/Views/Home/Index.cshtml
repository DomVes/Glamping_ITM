@model GlampingITM.Models.HomeViewModel

@{
    ViewData["Title"] = "Index";
}
<style type="text/css">
    .card {
        margin: 50px auto;
        width: 400px;
        padding: 30px;
        background-color: rgba(151, 107, 58, 0.3);
        color: black;
        border-radius: 10px;
    }

    .categories {
        text-decoration: none;
        align-items: center;
        color: black;
        text-shadow: 0px 6px 13px rgba(0,0,0,0.44);
    }

    .nav-search {
        border-radius: 75px 0px 161px 38px;
        -webkit-border-radius: 75px 0px 161px 38px;
        -moz-border-radius: 75px 0px 161px 38px;
        background: rgba(162,96,164,0.08);
        border: 2px solid rgba(28,126,69,0.16);       
        padding: inherit;
        text-align: center;
        justify-content: space-between;

    }

</style>
<form asp-action="Index" method="get">
    <div class="form-actions nav-search">
        <p>
            Buscar por nombre o categoría: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-success" />
            <a asp-action="Index" class="btn btn-outline-dark">Ver Todos</a>
            <a asp-action="Index" class="btn btn-outline-dark" asp-route-sortOrder="@ViewData["NameSortParm"]">Ordenar por Nombre</a>&nbsp;&nbsp;
            <a asp-action="Index" class="btn btn-outline-dark" asp-route-sortOrder="@ViewData["PriceSortParm"]">Ordenar por Precio</a>
        </p>
    </div>
</form>
<hr />
<div class="mb-1 nav-search">
    @foreach (var item in Model.Categories)
    {
        <span> <a class="categories" href="@Url.Action("Index", "Home", new { searchString = item.Name})"> @item.Name&nbsp;</a> | </span>
    }
</div>
<hr />
@if (Model.Quantity > 0)
{
    <a asp-action="ShowCart" class="btn btn-outline-primary">Ver Carro de Compras (@Model.Quantity)</a>
}

<div class="row row-cols-1 row-cols-md-4 g-4 mt-1">
    @if (Model.Products.Count() > 0)
    {
        @foreach (var item in Model.Products)
        {
            <div class="zoom" style="text-align:center">
                <div class="card ">
                    <div class="text-center">
                        <img src="@item.ImageFullPath" style="height:200px; max-width:200px; border-radius:0.5rem" class="text-center" alt=@item.Name />
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-navy"> @item.Name</h5>
                        <p class="card-text smfnt">@item.Description</p>
                    </div>
                    <div class="card-footer text-center">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Ver más</a>
                        <a asp-action="Add" asp-route-id="@item.Id" class="btn btn-sm btn-success">Añadir al Carrito</a>
                    </div>
                    <div>
                        <h5 style="text-align:center">@Html.DisplayFor(modelItem => item.Price)</h5>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <h3>No hay productos con su criterio de búsqueda</h3>
    }
</div>
@{
    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<div class="mt-5">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Anterior
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Siguiente
    </a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}

